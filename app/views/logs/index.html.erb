<div id="logs-index-content" class="container text-center">
  <h3><%= @logged_item.name.titleize %> LOGS</h3>

  <br><br>

  <div id="log-graph">
    <svg style="margin: 20px auto; width: 100%; height: 400px;"></svg>
  </div>

  <br><br>

  <div class="row">
    <div class="col-12 col-md-3 offset-md-3 mb-2">
      <%= link_to 'BACK', root_path, class: 'btn btn-outline-dark d-block'%>
    </div>

    <div class="col-12 col-md-3 mb-2">
      <%= link_to "Edit Logs", edit_user_logged_item_path(@logged_item.user, @logged_item, anchor: 'log-fields'), class: 'btn btn-secondary d-block' %>
    </div>
  </div>

  <br><br>


</div>

<script type="text/javascript">
  $(document).ready(function() {
    datum = [{
      values: JSON.parse("<%= j chart_values(@logs, @logged_item.pad_dates?).to_json.html_safe %>"),
      key: "<%= @logged_item.name.titleize %>",
      color: '#ff7f0e'
    }];


    nv.addGraph(function() {
      var chart = nv.models.lineChart()
        .x(function(d) { return new Date(d.date).getTime(); })   //We can modify the data accessor functions...
        .y(function(d) { return d.value });

      chart.xAxis
        .axisLabel('Date')
        .tickFormat(function(d) {
          return d3.time.format('%x')(new Date(d))
        });

      chart.yAxis
        .axisLabel('<%= @logged_item.unit.present? ? @logged_item.unit : "Value" %>')
        .tickFormat(d3.format('<%= chart_tick_type(@logged_item).html_safe %>'));

      d3.select('#log-graph svg')
        .datum(datum)
        .transition().duration(500)
        .call(chart)
        .style({'width': '100%', 'height': '400px' });

      nv.utils.windowResize(chart.update);

      // ensure the chart fills the entirety of the svg
      chart.update();

      return chart;
    });
  });
</script>